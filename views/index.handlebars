<div id="bubble">
    <a href="/">
        <img src="/images/header2.gif" id="header-logo">
    </a>
    <hgroup class="speech-bubble" style="text-align:center;">
        <h1>WHAT'S<br>HAPPENIN' TN?</h1>
    </hgroup>
    <hgroup class="speech-bubble-2" style="text-align:center;">
        <h1><a href="/events" id="home">#KEEPITLOCAL</a></h1>
    </hgroup>

</div>


<div id="dark-panel">
    <div class="listings">
        {{!-- <div class="list-group rsvp-listings">
            <h3>
                RSVP'D EVENTS
            </h3>
            <ul>
                {{#each rsvp_events}}
                <li>
                    <h4><span class="listing-item">{{this.name}}</span> <span class="listing-item">{{this.location}}</span> <span
                            class="listing-item">{{this.votes}}</span> <span class="listing-item">{{this.creatorId}}</span></h4>
                </li>
                {{/each}}
            </ul>
        </div> --}}




        <div class="list-group user-listings">
            <h3 class="listings-section">
                YOUR EVENTS
            </h3>
            <div>
                <table align="left" id="listings-table">
                    <tr>
                        <th><span class="listing-header">name</span></th>
                        <th><span class="listing-header">date</span></th>
                        <th><span class="listing-header">category</span></th>
                        <th><span class="listing-header">distance</span></th>
                        <th><span class="listing-header">rsvps</span></th>
                        <th><span class="listing-header">creator</span></th>
                    </tr>
                    {{#each user_events}}
                    <tr class="listing-row" data-id="{{this.id}}">
                        <td><span class="listing-item listing-item-name"><a href="/events/{{this.id}}"
                                    class="event-link" data-id="{{this.id}}">{{this.name}}</a></span></td>
                        <td><span class="listing-item listing-item-date">{{moment this.date "MM/DD/YY"}}</span></td>
                        <td><span class="listing-item listing-item-cat">{{this.category}}</span></td>
                        <td><span class="listing-item listing-item-local">{{this.distance}} mi</span></td>
                        <td><span class="listing-item listing-item-votes">{{this.upVotes}}</span></td>
                        <td><span class="listing-item listing-item-id">{{this.creatorID}}</span></td>
                    </tr>
                    {{/each}}
                </table>
                {{!-- <button type="button" class="new-event-btn">make new event</button> --}}
                <a href="/create" class="new-event-btn">make new event</a>
                <br><br><br><br>
            </div>
        </div>
        <br>
        <div class="list-group all-listings">
            <h3 class="listings-section">
                ALL EVENTS
            </h3>
            <div>
                <table align="left" id="listings-table">
                    <tr>

                        <th><span class="listing-header">name</span></th>
                        <th><span class="listing-header">date</span></th>
                        <th><span class="listing-header">category</span></th>
                        <th><span class="listing-header">distance</span></th>
                        <th><span class="listing-header">rsvps</span></th>
                        <th><span class="listing-header">creator</span></th>

                    </tr>
                    {{#each all_events}}
                    <tr class="listing-row" data-id="{{this.id}}">
                        <td><span class="listing-item listing-item-name"><a href="/events/{{this.id}}"
                                    class="event-link" data-id="{{this.id}}">{{this.name}}</a></span></td>
                        <td><span class="listing-item listing-item-date">{{moment this.date "MM/DD/YY"}}</span></td>
                        <td><span class="listing-item listing-item-cat">{{this.category}}</span></td>
                        <td><span class="listing-item listing-item-local">{{this.distance}} mi</span></td>
                        <td><span class="listing-item listing-item-votes">{{this.upVotes}}</span></td>
                        <td><span class="listing-item listing-item-id">{{this.creatorID}}</span></td>
                    </tr>
                    {{/each}}
                </table>
                <br><br><br><br>
            </div>
        </div>
    </div>


</div>



<div id="refer-box">
    {{!-- <span id="refer-scroll"></span> --}}
</div>


<footer class="footer">
    <button id="refer-link">REFER A FRIEND</button>
    KEEP IT LOCALÂ®
    <span id="logout"><a href="/logout" id="logout-link">LOGOUT</a></span>
</footer>

<script type="text/javascript">

    $(document).ready(function () {
        $("#refer-box").hide()
        console.log(new Date().toISOString());
        $("#refer-link").click(function () {
            $.ajax("/api/code", {
                method: "POST",
                data: { now: new Date().toISOString() }
            }).then(function (res) {
                $('#refer-box').css("display", "initial").empty();
                console.log("status: " + res.status);
                switch (res.status) {
                    case 1: //created within the last 3 days
                        $.ajax("/api/allcodes", {
                            method: "GET"
                        }).then(function (allcodes) {
                            let msg = $("<p>").addClass("refer-msg")
                            msg.text("New users must wait 3 days before getting a referral code.");
                            $("#refer-box").append(msg)
                            $("#refer-box").fadeIn(1000)

                        })
                        break;
                    case 2: //not created within 3 days, but has gotten a code within the last 3 days
                        $.ajax("/api/allcodes", {
                            method: "GET"
                        }).then(function (allcodes) {
                            let msg = $("<p>").addClass("refer-msg");
                            msg.text("Sorry you're not eligible for a new code at this time, but here are your active codes: ");
                            $("#refer-box").append(msg);
                            for (var i = 0; i < allcodes.length; i++) {
                                console.log(allcodes[i]);
                                let code = $("<span>").addClass("refer-code");
                                code.text(allcodes[i]).append('<br>');
                                $("#refer-box").append(code);
                            }
                            $("#refer-box").fadeIn(1000)
                        })
                        break;
                    case 3: //not created within 3 days, and hasn't gotten a code within the last 3 days
                        $.ajax("/api/newCode", {
                            method: "POST",
                            data: { now: new Date().toISOString() }
                        }).then(function (resp) {
                            $.ajax("/api/allcodes", {
                                method: "GET"
                            }).then(function (allcodes) {
                                let newCodeMsg = $("<p>").addClass("refer-msg");
                                newCodeMsg.text("Here is your new code:\n").append("<br>").append($('<span>').addClass('refer-code').text(allcodes[0]).append("<br>"));
                                $("#refer-box").append(newCodeMsg);
                                let msg = $("<p>").addClass("refer-msg");
                                msg.text("The rest of your active referral codes:");
                                $("#refer-box").append(msg);
                                for (var i = 1; i < allcodes.length; i++) {
                                    console.log(allcodes[i]);
                                    let code = $("<span>").addClass("refer-code");
                                    code.text(allcodes[i]).append('<br>');
                                    $("#refer-box").append(code);
                                }
                                $("#refer-box").fadeIn(1000)

                            })
                        })
                        break;


                    default:
                        let msg = $("<p>").addClass("refer-msg");
                        msg.text("Sorry, something went wrong...");
                        $("#refer-box").append(msg);
                        $("#refer-box").fadeIn(1000);
                        break;
                }
            })
        })

        $(document.body).on("dblclick", function (event) {
            $("#refer-box").fadeOut(500)
        })

        $(".new-event-btn").click(function () {
            $.ajax(`/create`, {
                method: "GET"
            }).then(function (result) {
                console.log(result);
                window.location.replace(result);
                //window.location = `/event/${id}`
            })
        })

        $(document.body).on("click", ".listing-row", function (event) {
            console.log('clicked row');
            console.log(window.location.hostname + '/events/' + $(this).data('id'));
            window.location.href = $(this).data('id');
        })

        $(document.body).on("click", ".rsvp-btn", function (event) {
            let rsvp = {
                event_id: $(this).attr("data-id")
            }
            $.ajax("/api/rsvp/", {
                method: "PUT",
                data: rsvp
            }).then(function (result) {
                console.log("PUT result")
                console.log(result)
                //window.location.replace(result)
                //$("#rsvp-count").empty()
                $.ajax(`/api/rsvp/${rsvp.event_id}`, {
                    method: "GET"
                }).then(function (result) {
                    console.log('GET result');
                    console.log(result.upVotes);
                    $('#rsvp-count').html(result.upVotes);
                    //$("#side-btn").removeClass("rsvp-btn").val("you rsvp'd to this event")
                })
            })
        })

        $(".msg-btn").click(function (event) {
            event.preventDefault();
            let this_id = $(this).attr("data-id");
            let this_content = $("#new-msg").val().trim();
            console.log(this_id + this_content);
            $.ajax("/api/message", {
                method: "POST",
                data: {
                    id: this_id,
                    content: this_content,
                    now: new Date().toLocaleString()
                }
            }).then(function (result) {
                console.log("new message posted");
                $("#new-msg").val("");
                $.ajax("/api/message/" + this_id, {
                    method: "GET"
                }).then(function (result) {
                    console.log('result');
                    console.log(result);
                    $('#messages-list').empty();
                    result.forEach(function (item) {
                        //let date = $('<span>').addClass('msg-date').text(formatDate(item.createdAt));
                        let date = $('<span>').addClass('msg-date').text(formatDate(item.createdAt));
                        let time = $('<span>').addClass('msg-time').text(formatTime(item.createdAt));
                        let creator = $('<span>').addClass('msg-op').text(item.creatorID);
                        let listItem = $('<li>').append(date, time, creator);
                        listItem.append($('<span>').addClass('msg-content').text(item.content));
                        $("#messages-list").append(listItem);
                    })
                    $("#messages-list").scrollTop = $("#messages-list").scrollHeight;
                })
            })
        })

        $(document.body).on("click", ".edit-btn", function (event) {
            console.log('edit item');
            let headerText = $('.event-name').text();
            $('.event-name').remove();
            let headerContainer = $('<div>').addClass('input-field col s6');
            let headerInput = $('<input>').attr('id', 'edit-event-name').attr('type', 'text').addClass('validate').val(headerText);
            headerContainer.append(headerInput);
            $("#message-header").append(headerContainer);

            let descriptionText = $("#description").text();
            $("#description").remove();
            let descriptionContainer = $('<div>').addClass('input-field col s6');
            let descriptionInput = $('<textarea>').attr('id', 'edit-event-description').addClass('validate details-edit').val(descriptionText);
            descriptionContainer.append(descriptionInput);
            $("#message-description").append(descriptionContainer);
            $(this).addClass('confirm-btn').removeClass('edit-btn').text('Confirm Changes');
        });

        $(document.body).on('click', '.confirm-btn', function (event) {
            let newName = $("#edit-event-name").val().trim();
            let newDescription = $('#edit-event-description').val().trim();
            let eventID = $(this).data('id');
            let queryURL = '/api/event/' + eventID;
            $.ajax(queryURL, {
                method: 'PUT',
                data: {
                    name: newName,
                    description: newDescription
                }
            }).then(function () {
                $.ajax(queryURL, {
                    method: 'GET'
                }).then(function (resp) {
                    $("#message-description").empty();
                    $("#message-description").append($("<p>").attr("id", "description").text(resp.description));
                    $('#message-header').empty();
                    $('#message-header').append($('<span>').addClass('event-name').text(resp.name));
                    $('#side-btn').removeClass('confirm-btn').addClass('edit-btn').text('Edit this event');
                })
            })
        });

        function formatDate(date) {
            let months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
            let dateItems = date.split(', ');
            dateItems = dateItems[0].split('/');
            return months[parseInt(dateItems[0]) - 1] + " " + dateItems[1] + ", " + dateItems[2];
        }

        function formatTime(date) {
            let timeList = date.split(' ');
            let amORpm = timeList[timeList.length - 1];
            timeList = timeList[1].split(':');
            return timeList[0] + ":" + timeList[1] + " " + amORpm;
        }

    })
</script>